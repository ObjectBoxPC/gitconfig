[alias]
	a = add
		aa = add -A #Add all changes (new, modified, deleted)
		ap = add -p #Add parts of files

	b = branch
		ba = branch -a
		bd = branch -d
		bdd = branch -D
		bm = branch -m
		#Although this is technically a different command, it makes some sense to group it under here
		bn = checkout -b #New branch and checkout

	c = commit
		ca = commit --amend #Amend commit without resetting author information; may be used when only the message is amended
		car = commit --amend --reset-author #Amend while resetting authorship information, for when the actual changes are amended; see also "ninja"
		cf = commit --fixup #Commit with fixup message suitable for rebase with autosquash
		cm = commit -m #Commit with message on command line

	d = diff
		dc = diff --cached #Show staged changes
		#Although "difftool" is technically a different command, it makes some sense to group those aliases under here
		dct = difftool --cached #Perhaps this should be "dtc" but it may be thought of it as "diff --cached with a tool"
		dt = difftool

	f = fetch
		fp = fetch --prune #Prune remote-tracking branches deleted on remote

	g = gui citool #Make a single commit and exit, different from plain "git gui"

	gr = log --all --graph --oneline #Show commit graph

	h = checkout #Not "c" because that is taken by "commit"
		hp = checkout -p #Revert parts of files

	k = !gitk --branches --tags --remotes --date-order #Personal preferences for gitk (already a remembered view but this goes directly to it)

	l = log

	m = merge
		ma = merge --abort
		mff = merge --ff-only
		mnoff = merge --no-ff
		ms = merge --squash #Probably won't be used very often

	ninja = commit --amend --reset-author --no-edit #"Ninja edit," editing a commit that has not been pushed so that no one else can tell

	pi = cherry-pick
		pia = cherry-pick --abort
		pin = cherry-pick -n

	pl = pull
		plr = pull --rebase

	ps = push
		psd = push -d #Delete remote branch
		psu = push -u #Setup upstream tracking

	s = status
		ss = status -s #Short format, machine-readable

	sct = !sh -c 'git difftool "$0^${1:-1}" "$0"' #Show commit diff using difftool (optional second argument to select parent number for merges)

	t = stash push -m #Not bare "stash" to enforce always adding a message (plus avoids a conflict with "stash pop")
		td = stash drop
		tl = stash list
		tp = stash pop

	rb = rebase
		rba = rebase --abort
		rbc = rebase --continue
		rbi = rebase -i

	rl = reflog

	rs = reset
		rsh = reset --hard
		rss = reset --soft
[gui]
	gcwarning = false #Warning is often a hindrance; can run "gc" manually if performance is really a problem
	commitmsgwidth = 72
[init]
	defaultBranch = main
[merge]
	conflictStyle = diff3
[rebase]
	autoSquash = true
	missingCommitsCheck = error
